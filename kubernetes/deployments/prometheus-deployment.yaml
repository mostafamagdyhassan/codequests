apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    rule_files:
      - "/etc/prometheus/alert.rules.yml"
    alerting:
      alertmanagers:
        - static_configs:
            - targets: ["alertmanager.monitoring:9093"]
    scrape_configs:
      - job_name: 'backend'
        static_configs:
          - targets: ['backend.app.svc.cluster.local:8000']
          - targets: ['backend:8000']
      - job_name: 'postgres_exporter'
        static_configs:
          - targets: ['postgres-exporter.monitoring:9187', 'postgres:9187']
      - job_name: 'node-exporter'
        static_configs:
          - targets: ['node-exporter.monitoring:9100']
  alert.rules.yml: |
    groups:
      - name: application-alerts
        rules:
          - alert: HighCPUUsage
            expr: (sum(rate(container_cpu_usage_seconds_total{container!=""}[5m])) by (pod)) / (sum(kube_pod_container_resource_limits_cpu_cores) by (pod)) > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage detected for pod {{ $labels.pod }}"
              description: "Pod {{ $labels.pod }} CPU usage >80% for more than 5 minutes."
          - alert: PodCrashLooping
            expr: increase(kube_pod_container_status_restarts_total[5m]) > 3
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod {{ $labels.pod }} is crash looping"
              description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} restarted more than 3 times in 5 minutes."
          - alert: PostgresDown
            expr: pg_up == 0
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "Postgres database is down"
              description: "Postgres exporter reports database is not reachable."
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus
  type: ClusterIP
