apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: backend
          image: {{ .Values.backend.image }}
          ports:
            - containerPort: 8000
          env:
            - name: DB_HOST
              value: {{ printf "postgresql.%s.svc.cluster.local" .Release.Namespace }}
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database }}
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: DB_PASS
              value: {{ .Values.postgresql.auth.password }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
    - port: 8000
      targetPort: 8000
